swagger: "2.0"
info:
  version: "0.0.1"
  title: My Favorite Bar API
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /Spirits:
    # binds a127 app logic to a route
    x-swagger-router-controller: spirit
    get:
      description: Returns a list of spirit types.
      # used as the method name of the controller
      operationId: index
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/SuccessResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /Spirits/{id}:
    # binds a127 app logic to a route
    x-swagger-router-controller: spirit
    get:
      description: Returns details of a spirit type.
      # used as the method name of the controller
      operationId: view
      parameters:
      - name: id
        in: path
        description: ID of spirit to return
        required: true
        type: integer
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Spirit'
        400:
          description: Invalid ID supplied
        404:
          description: Spirit type not found
  /swagger:
    x-swagger-pipe: swagger_raw
    
# complex objects have schema definitions
definitions:
  Spirit:
    type: object
    required:
    - id
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
        example: Rum
      status:
        type: string
        description: Status of the spirit type.
        enum:
        - Approved
        - pending
  SuccessResponse:
    required:
      - message
    properties:
      message:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
